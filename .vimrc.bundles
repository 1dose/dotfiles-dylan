" Modeline {
" vim: set sw=2 ts=2 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
" }

Bundle 'vim-scripts/loremipsum'
Plugin 'christoomey/vim-run-interactive'
Plugin 'croaky/vim-colors-github'
Plugin 'kchmck/vim-coffee-script'
Plugin 'pbrisbin/vim-mkdir'
Plugin 'scrooloose/syntastic'
Plugin 'slim-template/vim-slim'
Plugin 'thoughtbot/vim-rspec'
Plugin 'tpope/vim-bundler'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-eunuch'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
Plugin 'vim-ruby/vim-ruby'
Plugin 'vim-scripts/ctags.vim'
Plugin 'vim-scripts/matchit.zip'
Plugin 'vim-scripts/tComment'
Plugin 'godlygeek/tabular'
Plugin 'pangloss/vim-javascript'
Plugin 'AndrewRadev/splitjoin.vim'
Plugin 'Raimondi/delimitMate'
Plugin 'rstacruz/sparkup'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'
Plugin 'zeekay/vim-html2jade'

Plugin 'digitaltoad/vim-jade'
" vim-jade {
augroup vim_jade
  autocmd!
  au BufNewFile,BufReadPost *.jade set filetype=jade
augroup END
" }

Plugin 'Chiel92/vim-autoformat'
" vim-autoformat {
augroup vim_autoformat
  autocmd!
  map <c-f> :Autoformat<CR><CR>
augroup END
" }

Plugin 'scrooloose/nerdtree'
" nerdtree {
augroup NERDTree
  autocmd!
  map <C-e> :NERDTreeToggle<CR>
augroup END
" }

Plugin 'kien/ctrlp.vim'
" ctrlp {
augroup ctrlp
  autocmd!
  let g:ctrlp_map = '<c-p>'
augroup END
" }

Plugin 'bling/vim-airline'
" vim-airline {
augroup vim-airline
  autocmd!
  let g:airline_powerline_fonts = 1
augroup END
" }

Plugin 'Shougo/neocomplete.vim'
" neocomplete {
augroup neocomplete_config
  autocmd!
  "Note: This option must set it in .vimrc(_vimrc).  NOT IN .gvimrc(_gvimrc)!
  " Disable AutoComplPop.
  let g:acp_enableAtStartup = 0
  " Use neocomplete.
  let g:neocomplete#enable_at_startup = 1
  " Use smartcase.
  let g:neocomplete#enable_smart_case = 1
  " Set minimum syntax keyword length.
  let g:neocomplete#sources#syntax#min_keyword_length = 3
  let g:neocomplete#lock_buffer_name_pattern = '\*ku\*'

  " Define dictionary.
  let g:neocomplete#sources#dictionary#dictionaries = {
        \ 'default' : '',
        \ 'vimshell' : $HOME.'/.vimshell_hist',
        \ 'scheme' : $HOME.'/.gosh_completions'
        \ }

  " Define keyword.
  if !exists('g:neocomplete#keyword_patterns')
    let g:neocomplete#keyword_patterns = {}
  endif
  let g:neocomplete#keyword_patterns['default'] = '\h\w*'

  " Plugin key-mappings.
  inoremap <expr><C-g>     neocomplete#undo_completion()
  inoremap <expr><C-l>     neocomplete#complete_common_string()

  " Recommended key-mappings.
  " <CR>: close popup and save indent.
  inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
  function! s:my_cr_function()
    return neocomplete#close_popup() . "\<CR>"
    " For no inserting <CR> key.
    "return pumvisible() ? neocomplete#close_popup() : "\<CR>"
  endfunction
  " <TAB>: completion.
  inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
  " inoremap <expr><Space>  pumvisible() ? "\<C-n><Right><Space>" : "\<Space>"
  " <C-h>, <BS>: close popup and delete backword char.
  inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
  inoremap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"
  inoremap <expr><C-y>  neocomplete#close_popup()
  inoremap <expr><C-e>  neocomplete#cancel_popup()
  " Close popup by <Space>.
  "inoremap <expr><Space> pumvisible() ? neocomplete#close_popup() : "\<Space>"

  " For cursor moving in insert mode(Not recommended)
  "inoremap <expr><Left>  neocomplete#close_popup() . "\<Left>"
  "inoremap <expr><Right> neocomplete#close_popup() . "\<Right>"
  "inoremap <expr><Up>    neocomplete#close_popup() . "\<Up>"
  "inoremap <expr><Down>  neocomplete#close_popup() . "\<Down>"
  " Or set this.
  "let g:neocomplete#enable_cursor_hold_i = 1
  " Or set this.
  "let g:neocomplete#enable_insert_char_pre = 1

  " AutoComplPop like behavior.
  " let g:neocomplete#enable_auto_select = 1

  " Shell like behavior(not recommended).
  "set completeopt+=longest
  " let g:neocomplete#enable_auto_select = 1
  " let g:neocomplete#disable_auto_complete = 1
  " inoremap <expr><TAB>  pumvisible() ? "\<Down>" : "\<C-x>\<C-u>"

  " Enable omni completion.
  autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
  autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
  autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
  autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
  autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags

  " Enable heavy omni completion.
  if !exists('g:neocomplete#sources#omni#input_patterns')
    let g:neocomplete#sources#omni#input_patterns = {}
  endif
  "let g:neocomplete#sources#omni#input_patterns.php = '[^. \t]->\h\w*\|\h\w*::'
  "let g:neocomplete#sources#omni#input_patterns.c = '[^.[:digit:] *\t]\%(\.\|->\)'
  "let g:neocomplete#sources#omni#input_patterns.cpp = '[^.[:digit:] *\t]\%(\.\|->\)\|\h\w*::'

  " For perlomni.vim setting.
  " https://github.com/c9s/perlomni.vim
  let g:neocomplete#sources#omni#input_patterns.perl = '\h\w*->\h\w*\|\h\w*::'

  if !exists('g:neocomplcache_wildcard_characters')
    let g:neocomplcache_wildcard_characters = {}
  endif
  let g:neocomplcache_wildcard_characters._ = '-'

  let g:neocomplete#enable_auto_delimiter = 1

  if has("autocmd")
    autocmd FileType c      set shiftwidth=4 softtabstop=4 tabstop=4 expandtab
    autocmd FileType java   set shiftwidth=4 softtabstop=4 tabstop=4 expandtab
    autocmd FileType cpp,sh set shiftwidth=4 softtabstop=4 tabstop=4 expandtab
    autocmd FileType perl   set shiftwidth=4 softtabstop=4 tabstop=4 expandtab
    autocmd FileType ruby   set shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd FileType vim    set shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd FileType haml   set shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd FileType coffee set shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd FileType slim   set shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd FileType scss   set shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd FileType php    set shiftwidth=4 softtabstop=4 tabstop=4 expandtab
    autocmd FileType json   set shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd FileType jade   set shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd FileType stylus set shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd FileType go     set shiftwidth=4 softtabstop=4 tabstop=4 noexpandtab nolist

    autocmd FileType scss,css setlocal omnifunc=csscomplete#CompleteCSS
    autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
    autocmd FileType coffee,javascript setlocal omnifunc=javascriptcomplete#CompleteJS
    autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
    autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
  endif
augroup END
" }
